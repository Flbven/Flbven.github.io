(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{662:function(t,v,_){"use strict";_.r(v);var s=_(55),n=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"第二章-变量和基本类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第二章-变量和基本类型"}},[t._v("#")]),t._v(" 第二章 变量和基本类型")]),t._v(" "),_("h5",{attrs:{id:"_1-1-常用内置类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-常用内置类型"}},[t._v("#")]),t._v(" 1.1 常用内置类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("类型")]),t._v(" "),_("th",[t._v("含义")]),t._v(" "),_("th",[t._v("最小尺寸")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("bool")])]),t._v(" "),_("td",[t._v("布尔类型")]),t._v(" "),_("td",[t._v("undefined")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("char")])]),t._v(" "),_("td",[t._v("字符类型")]),t._v(" "),_("td",[t._v("8位")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("int")])]),t._v(" "),_("td",[t._v("整型")]),t._v(" "),_("td",[t._v("16位(在32位系统中为32位)")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("long")])]),t._v(" "),_("td",[t._v("长整型")]),t._v(" "),_("td",[t._v("32位")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("long long")])]),t._v(" "),_("td",[t._v("长整形")]),t._v(" "),_("td",[t._v("64位")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("float")])]),t._v(" "),_("td",[t._v("单精度浮点数")]),t._v(" "),_("td",[t._v("6位有效数字")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("double")])]),t._v(" "),_("td",[t._v("双精度浮点数")]),t._v(" "),_("td",[t._v("10位有效数字")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("选择数据类型的方法：")]),t._v(" "),_("ul",[_("li",[t._v("明确数值不可能为负值时， 选用无符号类型")]),t._v(" "),_("li",[t._v("使用"),_("strong",[t._v("int")]),t._v("执行整型运算，"),_("strong",[t._v("short")]),t._v("太短而"),_("strong",[t._v("long")]),t._v("一般和int有一样的尺寸（只有long>=int的规定）， 范围不够时选用"),_("strong",[t._v("long long")])]),t._v(" "),_("li",[t._v("算术表达式中不要使用"),_("strong",[t._v("char")]),t._v("或"),_("strong",[t._v("bool")])]),t._v(" "),_("li",[t._v("执行浮点数运算用"),_("strong",[t._v("double")])])])]),t._v(" "),_("h5",{attrs:{id:"_1-2-类型转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-类型转换"}},[t._v("#")]),t._v(" 1.2 类型转换")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("非布尔类型 -> 布尔类型\t0 ？ false : true")])]),t._v(" "),_("li",[_("p",[t._v("浮点数 -> 整数类型 保留小数点前的部分")])]),t._v(" "),_("li",[_("p",[t._v("赋给无符号数一个超出表示范围的值时，结果是初始值对无符号类型表示数值总数取模后的余数，如将-1赋给8比特大小的数据类型结果为255")]),t._v(" "),_("p",[t._v("所以在类似")]),t._v(" "),_("div",{staticClass:"language-c++ line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("for(int i = 10 ; i >= 0 ; i -- )\n    statement\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br")])]),_("p",[t._v("最后会将循环变量减到0以下时不能用unsigned代替")]),t._v(" "),_("div",{staticClass:"language-c++ line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("for(unsigned i = 10 ;  i >= 0 ; i -- )\n    statement\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br")])]),_("p",[t._v("因为当"),_("strong",[t._v("i=0")]),t._v("时，执行**i--**后无符号数并不会小于0，反而会变成更大的一个正数。")]),t._v(" "),_("blockquote",[_("p",[t._v("​\t最好不要混用带符号类型和无符号类型。")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("要避免无法预知和依赖于实现环境的行为，比如如果我们把"),_("strong",[t._v("int")]),t._v("的尺寸看成是一个确定不变的已知值，那么这样的程序就被称为"),_("strong",[t._v("不可移植的")]),t._v("。当程序移植到别的机器上时，依赖于实现环境的程序就可能发生错误。")])]),t._v(" "),_("h5",{attrs:{id:"_1-3-字面值常量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-字面值常量"}},[t._v("#")]),t._v(" 1.3 字面值常量")]),t._v(" "),_("p",[_("code",[t._v("字面值常量")]),t._v("指的是一个固定的值，每一个字面值常量都对应一个数据类型。")]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("整型常量")])]),t._v(" "),_("p",[t._v("进制的表示（以20为例）：")]),t._v(" "),_("div",{staticClass:"language-c++ line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v(" 20     // 十进制\n 024    //八进制\n 0x14    //十六进制\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br")])]),_("p",[_("code",[t._v("整型字面值")]),t._v("具体的数据类型由它的"),_("strong",[t._v("值和符号")]),t._v("决定，默认情况下，十进制字面值是带符号数，而八进制和十六进制字面值既可能是带符号数，也可能是无符号数。十进制字面值的类型是满足值大小的"),_("strong",[t._v("int")]),t._v("、"),_("strong",[t._v("long")]),t._v("、"),_("strong",[t._v("long long")]),t._v("中最小的那个，而八进制和十六进制还要包含所有无符号整数类型。")]),t._v(" "),_("blockquote",[_("p",[t._v("​\tshort没有对应的字面值。")])])]),t._v(" "),_("li",[_("p",[t._v("字符和字符串常量")])]),t._v(" "),_("li",[_("p",[t._v("布尔常量")])]),t._v(" "),_("li",[_("p",[t._v("指针常量")])])]),t._v(" "),_("h5",{attrs:{id:"_1-4-变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-变量"}},[t._v("#")]),t._v(" 1.4 变量")]),t._v(" "),_("h6",{attrs:{id:"变量的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义"}},[t._v("#")]),t._v(" 变量的定义")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("定义形式： 类型说明符，随后紧跟一个或多个变量名所组成的列表，定义时也可为一个或多个变量赋值。")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("初始化")]),t._v(": 当对象在创建时获得了一个特定的值， 我们说它被"),_("strong",[t._v("初始化")]),t._v("了。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("默认初始化：如果定义时没有指定值，则它会被赋予一个默认值，默认值由定义类型决定。")]),t._v(" "),_("p",[_("strong",[t._v("为了安全起见，建议初始化每一个内置类型的变量。")])])]),t._v(" "),_("li",[_("p",[t._v("列表初始化： 无论是初始化对象还是赋新值， 都可以用一组由花括号括起来的初始值。")]),t._v(" "),_("div",{staticClass:"language-c++ line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("// 以下均为有效初始化\nint x = 0;\nint x = {0};\nint x{0};\nint x(0);\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br")])])])])])]),t._v(" "),_("blockquote",[_("p",[t._v("初始化与赋值并不相同， 初始化的含义是在创建变量的时候赋予其一个初始值， 而赋值的含义是用新值代替当前的旧值。")])]),t._v(" "),_("h6",{attrs:{id:"变量的声明与定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量的声明与定义"}},[t._v("#")]),t._v(" 变量的声明与定义")]),t._v(" "),_("p",[t._v("为了支持"),_("strong",[t._v("分离式编译")]),t._v("，C++将声明与定义区分开来， "),_("code",[t._v("声明")]),t._v("使得名字为程序所知，"),_("code",[t._v("定义")]),t._v("负责创建与名字关联的实体。")]),t._v(" "),_("p",[t._v("如果想仅仅声明一个变量而非定义它，就需要使用"),_("strong",[t._v("关键字extern")]),t._v("，而且不要显式地初始化变量。")]),t._v(" "),_("div",{staticClass:"language-c++ line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("extern int i;     //声明而非定义i\nint j;            //声明并定义j\nextern int i = 0; //extern失效, 变为定义 \n//如果在函数体内部初始化一个标记为extern的变量\t将引发错误\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br")])]),_("blockquote",[_("p",[t._v("​\t变量能且只能被定义一次， 但是可以被多次声明。")])])])}),[],!1,null,null,null);v.default=n.exports}}]);